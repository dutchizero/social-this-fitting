{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/matetosapon/Documents/SocialThisFitting/App/social-this-fitting/Main.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { FontAwesome } from '@expo/vector-icons';\nimport * as Constant from \"./Constant\";\nimport AppleHealthKit from 'rn-apple-healthkit';\n\nvar Main = function (_React$Component) {\n  _inherits(Main, _React$Component);\n\n  var _super = _createSuper(Main);\n\n  function Main() {\n    var _this;\n\n    _classCallCheck(this, Main);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      isPedometerAvailable: 'checking',\n      pastStepCount: 0,\n      currentStepCount: 0\n    };\n\n    _this._subscribe = function () {\n      _this._subscription = Pedometer.watchStepCount(function (result) {\n        _this.setState({\n          currentStepCount: result.steps\n        });\n      });\n      Pedometer.isAvailableAsync().then(function (result) {\n        _this.setState({\n          isPedometerAvailable: String(result)\n        });\n      }, function (error) {\n        _this.setState({\n          isPedometerAvailable: 'Could not get isPedometerAvailable: ' + error\n        });\n      });\n      var end = new Date();\n      var start = new Date();\n      start.setDate(end.getDate() - 7);\n      Pedometer.getStepCountAsync(start, end).then(function (result) {\n        _this.setState({\n          pastStepCount: result.steps\n        });\n      }, function (error) {\n        _this.setState({\n          pastStepCount: 'Could not get stepCount: ' + error\n        });\n      });\n    };\n\n    _this._unsubscribe = function () {\n      _this._subscription && _this._subscription.remove();\n      _this._subscription = null;\n    };\n\n    return _this;\n  }\n\n  _createClass(Main, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._subscribe();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._unsubscribe();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 7\n        }\n      }, React.createElement(Image, {\n        style: styles.logoImg,\n        source: require(\"./assets/logo.png\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }\n      }), React.createElement(FontAwesome.Button, {\n        name: \"instagram\",\n        style: styles.loginBtn,\n        onClick: function onClick() {\n          return _this2.handleHealthKit();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.loginText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }\n      }, \"TEST\")));\n    }\n  }]);\n\n  return Main;\n}(React.Component);\n\nexport { Main as default };\nvar styles = StyleSheet.create({\n  container: {\n    height: '100%',\n    backgroundColor: Constant.COLOR_GREY,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  logo: {\n    fontWeight: \"bold\",\n    fontSize: 28,\n    color: Constant.COLOR_RED,\n    marginBottom: 40\n  },\n  logoImg: {\n    width: 150,\n    height: 150,\n    marginBottom: 40\n  },\n  inputView: {\n    width: \"80%\",\n    backgroundColor: Constant.COLOR_WHITE,\n    borderRadius: 5,\n    height: 50,\n    marginBottom: 20,\n    justifyContent: \"center\",\n    padding: 20,\n    display: 'none'\n  },\n  inputText: {\n    height: 50,\n    color: Constant.COLOR_GREY\n  },\n  forgot: {\n    color: Constant.COLOR_GREY,\n    fontSize: 11\n  },\n  loginBtn: {\n    backgroundColor: Constant.COLOR_FACEBOOK,\n    borderRadius: 5,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    padding: 15\n  },\n  loginText: {\n    color: \"white\",\n    fontWeight: '700',\n    paddingLeft: 20,\n    paddingRight: 20\n  }\n});","map":{"version":3,"sources":["/Users/matetosapon/Documents/SocialThisFitting/App/social-this-fitting/Main.js"],"names":["React","FontAwesome","Constant","AppleHealthKit","Main","state","isPedometerAvailable","pastStepCount","currentStepCount","_subscribe","_subscription","Pedometer","watchStepCount","result","setState","steps","isAvailableAsync","then","String","error","end","Date","start","setDate","getDate","getStepCountAsync","_unsubscribe","remove","styles","container","logoImg","require","loginBtn","handleHealthKit","loginText","Component","StyleSheet","create","height","backgroundColor","COLOR_GREY","alignItems","justifyContent","logo","fontWeight","fontSize","color","COLOR_RED","marginBottom","width","inputView","COLOR_WHITE","borderRadius","padding","display","inputText","forgot","COLOR_FACEBOOK","paddingLeft","paddingRight"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { StyleSheet, Text, View, TextInput, TouchableOpacity, Image } from 'react-native';\nimport { FontAwesome } from '@expo/vector-icons';\nimport * as Constant from './Constant';\nimport AppleHealthKit from 'rn-apple-healthkit';\n\nexport default class Main extends React.Component {\n  state = {\n    isPedometerAvailable: 'checking',\n    pastStepCount: 0,\n    currentStepCount: 0\n  };\n\n  componentDidMount() {\n    this._subscribe();\n  }\n\n  componentWillUnmount() {\n    this._unsubscribe();\n  }\n\n  _subscribe = () => {\n    this._subscription = Pedometer.watchStepCount(result => {\n      this.setState({\n        currentStepCount: result.steps,\n      });\n    });\n\n    Pedometer.isAvailableAsync().then(\n      result => {\n        this.setState({\n          isPedometerAvailable: String(result),\n        });\n      },\n      error => {\n        this.setState({\n          isPedometerAvailable: 'Could not get isPedometerAvailable: ' + error,\n        });\n      }\n    );\n\n    const end = new Date();\n    const start = new Date();\n    start.setDate(end.getDate() - 7);\n    Pedometer.getStepCountAsync(start, end).then(\n      result => {\n        this.setState({ pastStepCount: result.steps });\n      },\n      error => {\n        this.setState({\n          pastStepCount: 'Could not get stepCount: ' + error,\n        });\n      }\n    );\n  };\n\n  _unsubscribe = () => {\n    this._subscription && this._subscription.remove();\n    this._subscription = null;\n  };\n\n  render(){\n    return (\n      <View style={styles.container}>\n        <Image\n          style={styles.logoImg}\n          source={require('./assets/logo.png')}\n        />\n        <FontAwesome.Button name=\"instagram\" style={styles.loginBtn} onClick={() => this.handleHealthKit()}>\n          <Text style={styles.loginText}>TEST</Text>\n        </FontAwesome.Button>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    height: '100%',\n    backgroundColor: Constant.COLOR_GREY,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  logo:{\n    fontWeight:\"bold\",\n    fontSize:28,\n    color:Constant.COLOR_RED,\n    marginBottom:40\n  },\n  logoImg: {\n    width: 150,\n    height: 150,\n    marginBottom:40\n  },\n  inputView:{\n    width:\"80%\",\n    backgroundColor:Constant.COLOR_WHITE,\n    borderRadius:5,\n    height:50,\n    marginBottom:20,\n    justifyContent:\"center\",\n    padding:20,\n    display: 'none'\n  },\n  inputText:{\n    height:50,\n    color:Constant.COLOR_GREY,\n  },\n  forgot:{\n    color:Constant.COLOR_GREY,\n    fontSize:11\n  },\n  loginBtn:{\n    backgroundColor:Constant.COLOR_FACEBOOK,\n    borderRadius:5,\n    alignItems:\"center\",\n    justifyContent:\"center\",\n    padding: 15\n  },\n  loginText:{\n    color:\"white\",\n    fontWeight: '700',\n    paddingLeft: 20,\n    paddingRight: 20\n  }\n});"]},"metadata":{},"sourceType":"module"}